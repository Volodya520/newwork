{"name": "test_addproduct", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8718280ff62e96ab1a0f86ca9a4b26aa\")>\n\n    @allure.epic(\"添加产品\")\n    @allure.feature(\"添加商品\")\n    @allure.story(\"修改商品\")\n    # 添加产品\n    def test_addproduct(driver):\n        add_product = Addproduct(driver)\n>       add_product.add_product()\n\ntest_main.py:58: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n..\\page\\main.py:64: in add_product\n    WebDriverWait(self.driver, 10).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"8718280ff62e96ab1a0f86ca9a4b26aa\")>\nmethod = <function Addproduct.add_product.<locals>.<lambda> at 0x0000026C294E4AF0>, message = ''\n\n    def until(self, method, message=''):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value is not False.\"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.time() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.time() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nc:\\users\\administrator\\appdata\\local\\programs\\python\\python38\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:80: TimeoutException"}, "start": 1645712001452, "stop": 1645712011484, "uuid": "eea9345c-20f0-45a1-a843-3dc054659208", "historyId": "05d0c81f80178a0ddc7da4f15ba7a926", "testCaseId": "edaf8904f8a0fcc303f3a40d8844d85b", "fullName": "test_main#test_addproduct", "labels": [{"name": "epic", "value": "添加产品"}, {"name": "feature", "value": "添加商品"}, {"name": "story", "value": "修改商品"}, {"name": "suite", "value": "test_main"}, {"name": "host", "value": "DESKTOP-205DCP6"}, {"name": "thread", "value": "18448-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_main"}]}